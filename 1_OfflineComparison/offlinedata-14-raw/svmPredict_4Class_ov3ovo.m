function PredictType = svmPredict_4Class_ov3ovo(test_Fea,Y,svmModels)
% input: test_Fea: test_Fea generated by the Y-th csp.

    %% modify input feature samples    
    assert(size(test_Fea{1},1) == size(test_Fea{2},1) && size(test_Fea{2},1) == size(test_Fea{3},1)...
    && size(test_Fea{3},1) == size(test_Fea{4},1),'Predit function <svmPredict_4Class_ov3ovo> input error!!');

    testsamplenum = size(test_Fea{1},1);
    
    [predict_label_te_1,accuracy_te_1,prob_estimates_te_1] = svmpredict(Y,test_Fea{1},svmModels.Mdl_1,' -b 1');
    [predict_label_te_23,accuracy_te_23,prob_estimates_te_23] = svmpredict(Y,test_Fea{2},svmModels.Mdl_23,' -b 1');
    [predict_label_te_24,accuracy_te_24,prob_estimates_te_24] = svmpredict(Y,test_Fea{3},svmModels.Mdl_24,' -b 1');
    [predict_label_te_34,accuracy_te_34,prob_estimates_te_34] = svmpredict(Y,test_Fea{4},svmModels.Mdl_34,' -b 1');
    %%%%%%%%%%%%%%%
    
    vote = zeros(testsamplenum,4);
    prob = zeros(testsamplenum,4);
    predict_label_te = zeros(testsamplenum,1);
    for i = 1:testsamplenum
        if predict_label_te_1(i) == 1
            vote(i,:) = [1,0,0,0];
            predict_label_te(i) = 1;
        else
            if predict_label_te_23(i) == 1
                vote(i,2) = vote(i,2)+1;
                prob(i,2) = prob_estimates_te_23(i,1);
            else
                vote(i,3) = vote(i,3)+1;
                prob(i,3) = prob_estimates_te_23(i,2);
            end
            if predict_label_te_24(i) == 1
                vote(i,2) = vote(i,2)+1;
                prob(i,2) = prob_estimates_te_24(i,1);
            else
                vote(i,4) = vote(i,4)+1;
                prob(i,4) = prob_estimates_te_24(i,2);
            end
            if predict_label_te_34(i) == 1
                vote(i,3) = vote(i,3)+1;
                prob(i,3) = prob_estimates_te_34(i,1);
            else
                vote(i,4) = vote(i,4)+1;
                prob(i,4) = prob_estimates_te_34(i,2);
            end
            if max(vote(i,:)) == 2
                [~,predict_label_te(i)] = max(vote(i,:));
            else
                [~,predict_label_te(i)] = max(prob(i,:));
            end
        end
    end

    %% 6 predictions fusing    
    PredictType = predict_label_te;
end
    